#!/usr/bin/env bash

set -e

# Set OS dependent sed command

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
	SEDCMD="sed -i"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    SEDCMD="sed -i'.backup' -e"
else
	printf "Unsupported OS!\n"
	exit 1
fi

# Create temp dir and register exit trap

TMP_DIR=$(mktemp -d)

function cleanup {
  rm -rf "$TMP_DIR"
  printf "Deleted temp working directory $TMP_DIR\n"
}

trap cleanup EXIT

# Transform protos to include java_package

cd $(git rev-parse --show-toplevel)

cp -R protos/* $TMP_DIR

for file in $(find $TMP_DIR -name "*.proto" | xargs); do
	set +e
	package=$(cat $file | grep -E -o "^package \S+;$" | cut -d';' -f 1 | cut -c 9-)
	package_status=$?
	set -e

	if [ ${package_status} -ne 0 ]; then
		printf "Failed to process file ${file}\nReason: failed to determine package name.\n\n"
		exit 1
	fi

	printf "Processing file ${file} in package ${package} ..."

	${SEDCMD} 's/syntax = "proto3";/syntax = "proto3";\n\noption java_package = "org.uwaterloo.subletr.proto.'${package}'";\noption java_multiple_files = true;/g' ${file}

	printf " done!\n"
done

# Store to android protos package

JAVA_DIR="android/app/src/main/java/"
PROTO_DIR="${JAVA_DIR}/org/uwaterloo/subletr/proto"

rm -rf $PROTO_DIR

mkdir -p $PROTO_DIR

protoc -I$TMP_DIR --java_out=${JAVA_DIR} --kotlin_out=${JAVA_DIR} $(find $TMP_DIR -name "*.proto" | xargs)

